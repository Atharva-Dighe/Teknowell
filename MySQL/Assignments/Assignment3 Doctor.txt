Assignment 3 Doctor Data Table -


mysql> select * from doctor;
+----+-----------+------------+-----------+--------+
| no | name      | speciality | city      | income |
+----+-----------+------------+-----------+--------+
|  1 | Sachin    | Neuro      | Pune      | 450000 |
|  2 | Meera     | Ortho      | Pune      | 450000 |
|  3 | Sneha     | Child      | Pune      | 200000 |
|  4 | Vikram    | Heart      | Pune      | 600000 |
|  5 | Anita     | Skin       | Pune      | 300000 |
|  6 | Amit      | Heart      | Pune      | 350000 |
|  7 | Arjun     | Skin       | Mumbai    | 100000 |
|  8 | Priya     | Ortho      | Mumbai    | 200000 |
|  9 | Amit      | Heart      | Mumbai    | 600000 |
| 10 | Rajesh    | Child      | Mumbai    | 250000 |
| 11 | Divya     | Neuro      | Mumbai    | 380000 |
| 12 | Seema     | Ortho      | Mumbai    | 300000 |
| 13 | Ravi      | Heart      | Chennai   | 250000 |
| 14 | Shweta    | Neuro      | Chennai   | 280000 |
| 15 | Siddharth | Ortho      | Chennai   | 150000 |
| 16 | Neha      | Child      |           | 300000 |
| 17 | Karan     | Skin       | Chennai   |  50000 |
| 18 | Sohail    | Neuro      | Bangalore | 380000 |
| 19 | Maya      | Heart      | Bangalore | 320000 |
| 20 | Dev       | Skin       | Bangalore | 410000 |
| 21 | Farhan    | Ortho      | Bangalore | 220000 |
| 22 | Rohit     | Child      | Delhi     | 280000 |
| 23 | Anjali    | Skin       | Delhi     | 370000 |
| 24 | Kabir     | Heart      | Delhi     | 450000 |
| 25 | Simran    | Neuro      | Delhi     | 600000 |
| 26 | Nisha     | Ortho      |           | 200000 |
| 27 | Tarun     | Heart      | Pune      | 500000 |
| 28 | Anita     | Skin       | Mumbai    | 300000 |
| 29 | Deepak    | Child      | Chennai   | 200000 |
| 30 | Gaurav    | Neuro      | Delhi     | 100000 |
+----+-----------+------------+-----------+--------+
30 rows in set (0.00 sec)


---------------------------------------------------------------------------

Q.1. Display details of those whose city is 'pune'

mysql> select * from doctor where city='pune';
+----+--------+------------+------+--------+----------+
| no | name   | speciality | city | income | patients |
+----+--------+------------+------+--------+----------+
|  1 | Sachin | Neuro      | Pune | 450000 |       95 |
|  2 | Meera  | Ortho      | Pune | 450000 |      100 |
|  3 | Sneha  | Child      | Pune | 200000 |       20 |
|  4 | Vikram | Heart      | Pune | 600000 |       75 |
|  5 | Anita  | Skin       | Pune | 300000 |       55 |
|  6 | Amit   | Heart      | Pune | 350000 |       95 |
| 27 | Tarun  | Heart      | Pune | 500000 |      120 |
+----+--------+------------+------+--------+----------+
7 rows in set (0.00 sec)

---------------------------------------------------------------------------

Q.2. Display details of those whose income is maximum

mysql> select * from doctor where income in (select max(income) from doctor);
+----+--------+------------+--------+--------+----------+
| no | name   | speciality | city   | income | patients |
+----+--------+------------+--------+--------+----------+
|  4 | Vikram | Heart      | Pune   | 600000 |       75 |
|  9 | Amit   | Heart      | Mumbai | 600000 |      120 |
| 25 | Simran | Neuro      | Delhi  | 600000 |      130 |
+----+--------+------------+--------+--------+----------+
3 rows in set (0.00 sec)

---------------------------------------------------------------------------

Q.3. Display details of those whose income is minimum

mysql> select * from doctor where income in (select min(income) from doctor);
+----+-------+------------+---------+--------+----------+
| no | name  | speciality | city    | income | patients |
+----+-------+------------+---------+--------+----------+
| 17 | Karan | Skin       | Chennai |  50000 |       10 |
+----+-------+------------+---------+--------+----------+
1 row in set (0.00 sec)

---------------------------------------------------------------------------

Q.4. Display names of those whose income is in between 200000 to 400000

mysql> select name,income from doctor where income between 200000 and 400000;
+--------+--------+
| name   | income |
+--------+--------+
| Sneha  | 200000 |
| Anita  | 300000 |
| Amit   | 350000 |
| Priya  | 200000 |
| Rajesh | 250000 |
| Divya  | 380000 |
| Seema  | 300000 |
| Ravi   | 250000 |
| Shweta | 280000 |
| Neha   | 300000 |
| Sohail | 380000 |
| Maya   | 320000 |
| Farhan | 220000 |
| Rohit  | 280000 |
| Anjali | 370000 |
| Nisha  | 200000 |
| Anita  | 300000 |
| Deepak | 200000 |
+--------+--------+
18 rows in set (0.00 sec)

---------------------------------------------------------------------------

Q.5. Display names and city of those doctors whose speciality is 'neuro' and 'heart'. 
Arrange in ascending order according to their speciality.

mysql> select name, city,speciality from doctor where speciality ='heart' or speciality='neuro' order by speciality asc;
+--------+-----------+------------+
| name   | city      | speciality |
+--------+-----------+------------+
| Vikram | Pune      | Heart      |
| Amit   | Pune      | Heart      |
| Amit   | Mumbai    | Heart      |
| Ravi   | Chennai   | Heart      |
| Maya   | Bangalore | Heart      |
| Kabir  | Delhi     | Heart      |
| Tarun  | Pune      | Heart      |
| Sachin | Pune      | Neuro      |
| Divya  | Mumbai    | Neuro      |
| Shweta | Chennai   | Neuro      |
| Sohail | Bangalore | Neuro      |
| Simran | Delhi     | Neuro      |
| Gaurav | Delhi     | Neuro      |
+--------+-----------+------------+
13 rows in set (0.05 sec)

---------------------------------------------------------------------------

Q.6. Display average income for all employee.

mysql> select sum(income) from doctor;
+-------------+
| sum(income) |
+-------------+
|     9540000 |
+-------------+
1 row in set (0.00 sec)

---------------------------------------------------------------------------

Q.7. Count total doctors which are belong to 'mumbai'

mysql> select count(city) from doctor where city='mumbai';
+-------------+
| count(city) |
+-------------+
|           7 |
+-------------+
1 row in set (0.00 sec)

---------------------------------------------------------------------------

Q.8. Count city wise doctors 

mysql> select city,count(city) from doctor group by(city);
+-----------+-------------+
| city      | count(city) |
+-----------+-------------+
| Pune      |           7 |
| Mumbai    |           7 |
| Chennai   |           5 |
|           |           2 |
| Bangalore |           4 |
| Delhi     |           5 |
+-----------+-------------+
6 rows in set (0.00 sec)

---------------------------------------------------------------------------

Q.9. Delete details of those whose salary>50000

mysql> select * from doctor;
+----+-------+------------+---------+--------+
| no | name  | speciality | city    | income |
+----+-------+------------+---------+--------+
| 17 | Karan | Skin       | Chennai |  50000 |
+----+-------+------------+-------)
--+--------+
1 row in set (0.00 sec)

---------------------------------------------------------------------------

Q.10. Add attribute no_of_patients to table

mysql> alter table doctor add column patients int;
Query OK, 0 rows affected (0.09 sec)
Records: 0  Duplicates: 0  Warnings: 0

---------------------------------------------------------------------------

Q.11. Change name of 'sachin' to 'sanjay' 

mysql> select * from doctor where name='sachin';
+----+--------+------------+------+--------+----------+
| no | name   | speciality | city | income | patients |
+----+--------+------------+------+--------+----------+
|  1 | Sachin | Neuro      | Pune | 450000 |       95 |
+----+--------+------------+------+--------+----------+
1 row in set (0.00 sec)

mysql> update doctor set name='sanjay' where name='sachin';
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> select * from doctor where name='sanjay';
+----+--------+------------+------+--------+----------+
| no | name   | speciality | city | income | patients |
+----+--------+------------+------+--------+----------+
|  1 | sanjay | Neuro      | Pune | 450000 |       95 |
+----+--------+------------+------+--------+----------+
1 row in set (0.00 sec)

---------------------------------------------------------------------------

Q.12. Delete primary key from given table

mysql> desc doctor;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| no         | int         | NO   | PRI | NULL    |       |
| name       | varchar(30) | YES  |     | NULL    |       |
| speciality | varchar(30) | YES  |     | NULL    |       |
| city       | varchar(20) | YES  |     | NULL    |       |
| income     | int         | YES  |     | NULL    |       |
| patients   | int         | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
6 rows in set (0.02 sec)

mysql> alter table doctor drop primary key;
Query OK, 30 rows affected (0.06 sec)
Records: 30  Duplicates: 0  Warnings: 0

mysql> desc doctor;
+------------+-------------+------+-----+---------+-------+
| Field      | Type        | Null | Key | Default | Extra |
+------------+-------------+------+-----+---------+-------+
| no         | int         | NO   |     | NULL    |       |
| name       | varchar(30) | YES  |     | NULL    |       |
| speciality | varchar(30) | YES  |     | NULL    |       |
| city       | varchar(20) | YES  |     | NULL    |       |
| income     | int         | YES  |     | NULL    |       |
| patients   | int         | YES  |     | NULL    |       |
+------------+-------------+------+-----+---------+-------+
6 rows in set (0.00 sec)

---------------------------------------------------------------------------

Q.13. If city is not inserted by user side then consider it as a 'delhi'

mysql> update doctor set city='Delhi' where city='';
Query OK, 2 rows affected (0.01 sec)
Rows matched: 2  Changed: 2  Warnings: 0

---------------------------------------------------------------------------

Q.14. If income <=0 then generate error

mysql> alter table doctor modify income int check(income>0);
Query OK, 30 rows affected (0.10 sec)
Records: 30  Duplicates: 0  Warnings: 0

mysql> update doctor set income=-10 where no=1;
ERROR 3819 (HY000): Check constraint 'doctor_chk_1' is violated.

mysql> update doctor set income=0 where no=1;
ERROR 3819 (HY000): Check constraint 'doctor_chk_1' is violated.

mysql> update doctor set income=450000 where no=1;
Query OK, 1 row affected (0.01 sec)
Rows matched: 1  Changed: 1  Warnings: 0

---------------------------------------------------------------------------

Q.15. Increase income of those doctors by 50000 whose no_of_patients>60

mysql> select * from doctor where patients>60;
+----+--------+------------+-----------+--------+----------+
| no | name   | speciality | city      | income | patients |
+----+--------+------------+-----------+--------+----------+
|  1 | sanjay | Neuro      | Pune      | 450000 |       95 |
|  2 | Meera  | Ortho      | Pune      | 450000 |      100 |
|  4 | Vikram | Heart      | Pune      | 600000 |       75 |
|  6 | Amit   | Heart      | Pune      | 350000 |       95 |
|  8 | Priya  | Ortho      | Mumbai    | 200000 |       65 |
|  9 | Amit   | Heart      | Mumbai    | 600000 |      120 |
| 11 | Divya  | Neuro      | Mumbai    | 380000 |       80 |
| 12 | Seema  | Ortho      | Mumbai    | 300000 |       95 |
| 13 | Ravi   | Heart      | Chennai   | 250000 |       70 |
| 14 | Shweta | Neuro      | Chennai   | 280000 |       90 |
| 18 | Sohail | Neuro      | Bangalore | 380000 |       92 |
| 19 | Maya   | Heart      | Bangalore | 320000 |      100 |
| 20 | Dev    | Skin       | Bangalore | 410000 |       65 |
| 24 | Kabir  | Heart      | Delhi     | 450000 |      110 |
| 25 | Simran | Neuro      | Delhi     | 600000 |      130 |
| 27 | Tarun  | Heart      | Pune      | 500000 |      120 |
| 28 | Anita  | Skin       | Mumbai    | 300000 |       85 |
| 29 | Deepak | Child      | Chennai   | 200000 |      105 |
+----+--------+------------+-----------+--------+----------+
18 rows in set (0.00 sec)

mysql> update doctor set income=income+50000 where patients>60;
Query OK, 18 rows affected (0.01 sec)
Rows matched: 18  Changed: 18  Warnings: 0

mysql> select * from doctor where patients>60;
+----+--------+------------+-----------+--------+----------+
| no | name   | speciality | city      | income | patients |
+----+--------+------------+-----------+--------+----------+
|  1 | sanjay | Neuro      | Pune      | 500000 |       95 |
|  2 | Meera  | Ortho      | Pune      | 500000 |      100 |
|  4 | Vikram | Heart      | Pune      | 650000 |       75 |
|  6 | Amit   | Heart      | Pune      | 400000 |       95 |
|  8 | Priya  | Ortho      | Mumbai    | 250000 |       65 |
|  9 | Amit   | Heart      | Mumbai    | 650000 |      120 |
| 11 | Divya  | Neuro      | Mumbai    | 430000 |       80 |
| 12 | Seema  | Ortho      | Mumbai    | 350000 |       95 |
| 13 | Ravi   | Heart      | Chennai   | 300000 |       70 |
| 14 | Shweta | Neuro      | Chennai   | 330000 |       90 |
| 18 | Sohail | Neuro      | Bangalore | 430000 |       92 |
| 19 | Maya   | Heart      | Bangalore | 370000 |      100 |
| 20 | Dev    | Skin       | Bangalore | 460000 |       65 |
| 24 | Kabir  | Heart      | Delhi     | 500000 |      110 |
| 25 | Simran | Neuro      | Delhi     | 650000 |      130 |
| 27 | Tarun  | Heart      | Pune      | 550000 |      120 |
| 28 | Anita  | Skin       | Mumbai    | 350000 |       85 |
| 29 | Deepak | Child      | Chennai   | 250000 |      105 |
+----+--------+------------+-----------+--------+----------+
18 rows in set (0.00 sec)

---------------------------------------------------------------------------

Q.16. Find out details of 'those doctors whose no_of_patients'>90

mysql> select * from doctor where patients>90;
+----+--------+------------+-----------+--------+----------+
| no | name   | speciality | city      | income | patients |
+----+--------+------------+-----------+--------+----------+
|  1 | sanjay | Neuro      | Pune      | 500000 |       95 |
|  2 | Meera  | Ortho      | Pune      | 500000 |      100 |
|  6 | Amit   | Heart      | Pune      | 400000 |       95 |
|  9 | Amit   | Heart      | Mumbai    | 650000 |      120 |
| 12 | Seema  | Ortho      | Mumbai    | 350000 |       95 |
| 18 | Sohail | Neuro      | Bangalore | 430000 |       92 |
| 19 | Maya   | Heart      | Bangalore | 370000 |      100 |
| 24 | Kabir  | Heart      | Delhi     | 500000 |      110 |
| 25 | Simran | Neuro      | Delhi     | 650000 |      130 |
| 27 | Tarun  | Heart      | Pune      | 550000 |      120 |
| 29 | Deepak | Child      | Chennai   | 250000 |      105 |
+----+--------+------------+-----------+--------+----------+
11 rows in set (0.00 sec)

------------------------------------------------------------------------------------------------------------------------------------------------------------

Q.17. Delete details of those whose income <50000 

mysql> delete from doctor where income<50000;
Query OK, 0 rows affected (0.00 sec)

mysql> delete from doctor where income<=50000;
Query OK, 1 row affected (0.01 sec)

------------------------------------------------------------------------------------------------------------------------------------------------------------

Q.18. Select unique records from doctor table.

 mysql> select distinct * from doctor ;
+----+-----------+------------+-----------+--------+----------+
| no | name      | speciality | city      | income | patients |
+----+-----------+------------+-----------+--------+----------+
|  1 | sanjay    | Neuro      | Pune      | 500000 |       95 |
|  2 | Meera     | Ortho      | Pune      | 500000 |      100 |
|  3 | Sneha     | Child      | Pune      | 200000 |       20 |
|  4 | Vikram    | Heart      | Pune      | 650000 |       75 |
|  5 | Anita     | Skin       | Pune      | 300000 |       55 |
|  6 | Amit      | Heart      | Pune      | 400000 |       95 |
|  7 | Arjun     | Skin       | Mumbai    | 100000 |       15 |
|  8 | Priya     | Ortho      | Mumbai    | 250000 |       65 |
|  9 | Amit      | Heart      | Mumbai    | 650000 |      120 |
| 10 | Rajesh    | Child      | Mumbai    | 250000 |       30 |
| 11 | Divya     | Neuro      | Mumbai    | 430000 |       80 |
| 12 | Seema     | Ortho      | Mumbai    | 350000 |       95 |
| 13 | Ravi      | Heart      | Chennai   | 300000 |       70 |
| 14 | Shweta    | Neuro      | Chennai   | 330000 |       90 |
| 15 | Siddharth | Ortho      | Chennai   | 150000 |       25 |
| 16 | Neha      | Child      | Delhi     | 300000 |       40 |
| 18 | Sohail    | Neuro      | Bangalore | 430000 |       92 |
| 19 | Maya      | Heart      | Bangalore | 370000 |      100 |
| 20 | Dev       | Skin       | Bangalore | 460000 |       65 |
| 21 | Farhan    | Ortho      | Bangalore | 220000 |       15 |
| 22 | Rohit     | Child      | Delhi     | 280000 |       35 |
| 23 | Anjali    | Skin       | Delhi     | 370000 |       60 |
| 24 | Kabir     | Heart      | Delhi     | 500000 |      110 |
| 25 | Simran    | Neuro      | Delhi     | 650000 |      130 |
| 26 | Nisha     | Ortho      | Delhi     | 200000 |       50 |
| 27 | Tarun     | Heart      | Pune      | 550000 |      120 |
| 28 | Anita     | Skin       | Mumbai    | 350000 |       85 |
| 29 | Deepak    | Child      | Chennai   | 250000 |      105 |
| 30 | Gaurav    | Neuro      | Delhi     | 100000 |       15 |
+----+-----------+------------+-----------+--------+----------+
29 rows in set (0.00 sec)

-----------------------------------------------------------------------------------------------------------------------------------------------------------

Q.19. Count doctor wise total income.

Wrong(Self)-
mysql> select name,income from doctor where income in (select sum(income) from doctor group by name);

Correct(GPT)-

mysql> select name,sum(income) as total from doctor group by name;
+-----------+---------+
| name      | total   |
+-----------+---------+
| sanjay    |  500000 |
| Meera     |  500000 |
| Sneha     |  200000 |
| Vikram    |  650000 |
| Anita     |  650000 |
| Amit      | 1050000 |
| Arjun     |  100000 |
| Priya     |  250000 |
| Rajesh    |  250000 |
| Divya     |  430000 |
| Seema     |  350000 |
| Ravi      |  300000 |
| Shweta    |  330000 |
| Siddharth |  150000 |
| Neha      |  300000 |
| Sohail    |  430000 |
| Maya      |  370000 |
| Dev       |  460000 |
| Farhan    |  220000 |
| Rohit     |  280000 |
| Anjali    |  370000 |
| Kabir     |  500000 |
| Simran    |  650000 |
| Nisha     |  200000 |
| Tarun     |  550000 |
| Deepak    |  250000 |
| Gaurav    |  100000 |
+-----------+---------+
27 rows in set (0.00 sec)

Also other way GPT-
 
SELECT name FROM doctor d
WHERE (
   SELECT SUM(income)
   FROM doctor d2
   WHERE d2.name = d.name
) > 50000;

------------------------------------------------------------------------------------------------------------------------------------------------------------

Q.20. Display records according doctors city name.

mysql> select * from doctor order by city asc;
+----+-----------+------------+-----------+--------+----------+
| no | name      | speciality | city      | income | patients |
+----+-----------+------------+-----------+--------+----------+
| 18 | Sohail    | Neuro      | Bangalore | 430000 |       92 |
| 19 | Maya      | Heart      | Bangalore | 370000 |      100 |
| 20 | Dev       | Skin       | Bangalore | 460000 |       65 |
| 21 | Farhan    | Ortho      | Bangalore | 220000 |       15 |
| 13 | Ravi      | Heart      | Chennai   | 300000 |       70 |
| 14 | Shweta    | Neuro      | Chennai   | 330000 |       90 |
| 15 | Siddharth | Ortho      | Chennai   | 150000 |       25 |
| 29 | Deepak    | Child      | Chennai   | 250000 |      105 |
| 16 | Neha      | Child      | Delhi     | 300000 |       40 |
| 22 | Rohit     | Child      | Delhi     | 280000 |       35 |
| 23 | Anjali    | Skin       | Delhi     | 370000 |       60 |
| 24 | Kabir     | Heart      | Delhi     | 500000 |      110 |
| 25 | Simran    | Neuro      | Delhi     | 650000 |      130 |
| 26 | Nisha     | Ortho      | Delhi     | 200000 |       50 |
| 30 | Gaurav    | Neuro      | Delhi     | 100000 |       15 |
|  7 | Arjun     | Skin       | Mumbai    | 100000 |       15 |
|  8 | Priya     | Ortho      | Mumbai    | 250000 |       65 |
|  9 | Amit      | Heart      | Mumbai    | 650000 |      120 |
| 10 | Rajesh    | Child      | Mumbai    | 250000 |       30 |
| 11 | Divya     | Neuro      | Mumbai    | 430000 |       80 |
| 12 | Seema     | Ortho      | Mumbai    | 350000 |       95 |
| 28 | Anita     | Skin       | Mumbai    | 350000 |       85 |
|  1 | sanjay    | Neuro      | Pune      | 500000 |       95 |
|  2 | Meera     | Ortho      | Pune      | 500000 |      100 |
|  3 | Sneha     | Child      | Pune      | 200000 |       20 |
|  4 | Vikram    | Heart      | Pune      | 650000 |       75 |
|  5 | Anita     | Skin       | Pune      | 300000 |       55 |
|  6 | Amit      | Heart      | Pune      | 400000 |       95 |
| 27 | Tarun     | Heart      | Pune      | 550000 |      120 |
+----+-----------+------------+-----------+--------+----------+
29 rows in set (0.00 sec)

------------------------------------------------------------------------------------------------------------------------------------------------------------

Q.21.  Select details of those whose income is second highest in table

mysql> select * from doctor where income in(select max(income) from doctor where income<(select max(income) from doctor));
+----+-------+------------+------+--------+----------+
| no | name  | speciality | city | income | patients |
+----+-------+------------+------+--------+----------+
| 27 | Tarun | Heart      | Pune | 550000 |      120 |
+----+-------+------------+------+--------+----------+
1 row in set (0.01 sec)


First Highest -

mysql> select * from doctor where income in(select max(income) from doctor);
+----+--------+------------+--------+--------+----------+
| no | name   | speciality | city   | income | patients |
+----+--------+------------+--------+--------+----------+
|  4 | Vikram | Heart      | Pune   | 650000 |       75 |
|  9 | Amit   | Heart      | Mumbai | 650000 |      120 |
| 25 | Simran | Neuro      | Delhi  | 650000 |      130 |
+----+--------+------------+--------+--------+----------+

LIMIT/OFFSET - Not right.

Skip the 1st row (highest), then pick the next row → second highest.

In this case, second row is also highest(65,000)
Query fails

mysql> select * from doctor order by income desc limit 1 offset 1;
+----+--------+------------+------+--------+----------+
| no | name   | speciality | city | income | patients |
+----+--------+------------+------+--------+----------+
|  4 | Vikram | Heart      | Pune | 650000 |       75 |
+----+--------+------------+------+--------+----------+
1 row in set (0.00 sec)

After many testing manually, This requires overheads. Absolutely wrong.
mysql> select * from doctor order by income desc limit 1 offset 3;
+----+-------+------------+------+--------+----------+
| no | name  | speciality | city | income | patients |
+----+-------+------------+------+--------+----------+
| 27 | Tarun | Heart      | Pune | 550000 |      120 |
+----+-------+------------+------+--------+----------+

------------------------------------------------------------------------------------------------------------------------------------------------------------

Q.22. Display details of those doctors whose occurance >1 times in table.

 mysql> select * from doctor where name in (select name from doctor group by name having count(*)>1);
+----+-------+------------+--------+--------+----------+
| no | name  | speciality | city   | income | patients |
+----+-------+------------+--------+--------+----------+
|  5 | Anita | Skin       | Pune   | 300000 |       55 |
|  6 | Amit  | Heart      | Pune   | 400000 |       95 |
|  9 | Amit  | Heart      | Mumbai | 650000 |      120 |
| 28 | Anita | Skin       | Mumbai | 350000 |       85 |
+----+-------+------------+--------+--------+----------+
4 rows in set (0.01 sec)


Arranged according to Names

mysql> select * from doctor where name in (select name from doctor group by name having count(*)>1) order by name;
+----+-------+------------+--------+--------+----------+
| no | name  | speciality | city   | income | patients |
+----+-------+------------+--------+--------+----------+
|  6 | Amit  | Heart      | Pune   | 400000 |       95 |
|  9 | Amit  | Heart      | Mumbai | 650000 |      120 |
|  5 | Anita | Skin       | Pune   | 300000 |       55 |
| 28 | Anita | Skin       | Mumbai | 350000 |       85 |
+----+-------+------------+--------+--------+----------+
4 rows in set (0.00 sec)


COUNT(*)

Inside each group, SQL can apply an aggregate function.

COUNT(*) counts how many rows are there in that group.
---------------------------------------------------------------------------
